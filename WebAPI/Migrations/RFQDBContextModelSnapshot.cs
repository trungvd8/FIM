// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Models;

namespace WebAPI.Migrations
{
    [DbContext(typeof(RFQDBContext))]
    partial class RFQDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebAPI.Models.ADGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ADGroupContent")
                        .IsRequired()
                        .HasColumnType("NCHAR(10)");

                    b.HasKey("Id");

                    b.ToTable("ADGroups");
                });

            modelBuilder.Entity("WebAPI.Models.BudgetGeography", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("NCHAR(10)");

                    b.HasKey("Id");

                    b.ToTable("BudgetGeography");
                });

            modelBuilder.Entity("WebAPI.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CategoryOrganizationId");

                    b.Property<DateTime?>("DateTime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<Guid?>("ExpertId");

                    b.Property<byte>("Level");

                    b.Property<Guid?>("MasterContractId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<Guid?>("ParentCategoryId");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("WebAPI.Models.CategoryOrganization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CategoryOrganizationContent")
                        .IsRequired()
                        .HasColumnType("NCHAR(10)");

                    b.HasKey("Id");

                    b.ToTable("CategoryOrganizations");
                });

            modelBuilder.Entity("WebAPI.Models.Expert", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ExpertContent")
                        .IsRequired()
                        .HasColumnType("NCHAR(10)");

                    b.HasKey("Id");

                    b.ToTable("Experts");
                });

            modelBuilder.Entity("WebAPI.Models.File", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("Content")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("WebAPI.Models.MasterContract", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("MasterContractContent")
                        .IsRequired()
                        .HasColumnType("NCHAR(10)");

                    b.HasKey("Id");

                    b.ToTable("MasterContracts");
                });

            modelBuilder.Entity("WebAPI.Models.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ADGroupId");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("NCHAR(10)");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<Guid?>("OrganizationUnitId");

                    b.Property<Guid?>("ParentId");

                    b.Property<string>("TaxCode")
                        .IsRequired()
                        .HasColumnType("NCHAR(10)");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("WebAPI.Models.OrganizationUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("NCHAR(10)");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<Guid>("OrganizationId");

                    b.Property<long?>("Version");

                    b.HasKey("Id");

                    b.ToTable("OrganizationUnits");
                });

            modelBuilder.Entity("WebAPI.Models.ParentCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ParentCategoryContent")
                        .IsRequired()
                        .HasColumnType("NCHAR(10)");

                    b.HasKey("Id");

                    b.ToTable("ParentCategories");
                });

            modelBuilder.Entity("WebAPI.Models.PRDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CategoryId");

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR(150)");

                    b.Property<int>("InstockQuantity");

                    b.Property<string>("Note")
                        .HasColumnType("NVARCHAR(150)");

                    b.Property<int>("Order");

                    b.Property<long>("Price");

                    b.Property<int>("PurchaseQuantity");

                    b.Property<Guid>("PurchaseRequestId");

                    b.Property<Guid?>("RFQId");

                    b.Property<int?>("RemainQuantity");

                    b.Property<int>("RequestQuantity");

                    b.Property<long>("TaxAmount");

                    b.Property<string>("TaxType")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<long>("Total");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int>("UnitPrice");

                    b.HasKey("Id");

                    b.ToTable("PRDetails");
                });

            modelBuilder.Entity("WebAPI.Models.PurchaseRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BOMApprover")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<Guid?>("BudgetGeoId");

                    b.Property<Guid?>("BudgetOrganizationId");

                    b.Property<Guid?>("BudgetOrganizationUnitId");

                    b.Property<string>("BudgetPeriod")
                        .IsRequired()
                        .HasColumnType("NCHAR(10)");

                    b.Property<string>("BudgetRemaining")
                        .HasColumnType("NCHAR(150)");

                    b.Property<string>("Comment")
                        .HasColumnType("NVARCHAR(150)");

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(150)");

                    b.Property<string>("FADApprover")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("FPDApprover")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<Guid?>("FileId");

                    b.Property<bool>("FrameContract");

                    b.Property<string>("Instock")
                        .HasColumnType("NCHAR(50)");

                    b.Property<int>("Level");

                    b.Property<string>("Note")
                        .HasColumnType("NVARCHAR(150)");

                    b.Property<int>("Number");

                    b.Property<Guid?>("ProjectBudgetId");

                    b.Property<Guid?>("ProjectId");

                    b.Property<DateTime?>("ReceiptDate");

                    b.Property<string>("ReceiveAddress")
                        .HasColumnType("NVARCHAR(150)");

                    b.Property<Guid?>("ReceiveOrganizationId");

                    b.Property<Guid?>("ReceiveOrganizationUnitId");

                    b.Property<string>("ReceivePhoneNumber")
                        .HasColumnType("NCHAR(20)");

                    b.Property<Guid?>("ReceiveUserId");

                    b.Property<DateTime>("RequestCreateDate");

                    b.Property<Guid?>("RequestOrganizationId");

                    b.Property<Guid?>("RequestOrganizationUnitId");

                    b.Property<string>("RequestPhoneNumber")
                        .IsRequired()
                        .HasColumnType("NCHAR(20)");

                    b.Property<Guid?>("RequestUserId");

                    b.Property<Guid?>("RootCategoryId");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("NCHAR(10)");

                    b.Property<Guid?>("SubRootCategoryId");

                    b.Property<long>("Total");

                    b.Property<Guid?>("VendorId");

                    b.HasKey("Id");

                    b.ToTable("PurchaseRequests");
                });

            modelBuilder.Entity("WebAPI.Models.Quotation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Note");

                    b.Property<DateTime>("NoteForVendor");

                    b.Property<long?>("Price");

                    b.Property<Guid>("QuotationHeaderId");

                    b.Property<Guid>("RFQDetailId");

                    b.Property<long?>("TaxAmount");

                    b.Property<string>("TaxType")
                        .IsRequired()
                        .HasColumnType("NCHAR(10)");

                    b.Property<long?>("Total");

                    b.Property<int?>("UnitPrice");

                    b.Property<Guid>("VendorId");

                    b.HasKey("Id");

                    b.ToTable("Quotations");
                });

            modelBuilder.Entity("WebAPI.Models.QuotationByVendor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("NCHAR(10)");

                    b.HasKey("Id");

                    b.ToTable("QuotationByVendors");
                });

            modelBuilder.Entity("WebAPI.Models.RequestForQuotation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(150)");

                    b.Property<Guid?>("FileId");

                    b.Property<Guid>("HandlerId");

                    b.Property<int>("Level");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<int>("Number");

                    b.Property<Guid>("OrganizationId");

                    b.Property<Guid>("OrganizationUnitId");

                    b.Property<Guid?>("PurchaseRequestId");

                    b.Property<Guid?>("QuotationByVendorId");

                    b.Property<string>("ReceivedAddress")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(150)");

                    b.Property<bool>("Status");

                    b.Property<Guid>("SubRootCategoryId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("RequestForQuotations");
                });

            modelBuilder.Entity("WebAPI.Models.RFQDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CategoryId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<bool>("IsApproved");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<DateTime>("NoteForVendor");

                    b.Property<byte>("Order");

                    b.Property<long>("Quantity");

                    b.Property<Guid?>("QuotationId");

                    b.Property<Guid?>("RFQId");

                    b.Property<Guid?>("SubRootCategoryId");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<Guid?>("VendorId");

                    b.HasKey("Id");

                    b.ToTable("RFQDetails");
                });

            modelBuilder.Entity("WebAPI.Models.RFQMailCC", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("RFQId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("RFQMailCCs");
                });

            modelBuilder.Entity("WebAPI.Models.RFQWorkflow", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte?>("Level");

                    b.Property<Guid>("RFQId");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(150)");

                    b.Property<long?>("Status");

                    b.Property<DateTime?>("Time");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("RFQWorkflows");
                });

            modelBuilder.Entity("WebAPI.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("NCHAR(10)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("WebAPI.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ADGroupId");

                    b.Property<string>("Display")
                        .IsRequired()
                        .HasColumnType("NCHAR(50)");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NCHAR(50)");

                    b.Property<Guid?>("RoleId");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("XML");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebAPI.Models.Vendor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(150)");

                    b.Property<bool>("Approved");

                    b.Property<string>("Bank")
                        .HasColumnType("NVARCHAR(150)");

                    b.Property<string>("BankAccount")
                        .HasColumnType("NCHAR(150)");

                    b.Property<string>("BankBranch")
                        .HasColumnType("NVARCHAR(150)");

                    b.Property<string>("Email")
                        .HasColumnType("NCHAR(150)");

                    b.Property<bool>("IsLock");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NCHAR(100)");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasColumnType("NCHAR(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("NCHAR(20)");

                    b.Property<string>("TaxCode")
                        .IsRequired()
                        .HasColumnType("NCHAR(10)");

                    b.Property<string>("Website")
                        .HasColumnType("NCHAR(150)");

                    b.HasKey("Id");

                    b.ToTable("Vendors");
                });
#pragma warning restore 612, 618
        }
    }
}
